/**
 * SPDX-FileCopyrightText: (c) 2024 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package avanis.lonjas.model.impl;

import avanis.lonjas.model.PrecioLonja;
import avanis.lonjas.model.PrecioLonjaModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the PrecioLonja service. Represents a row in the &quot;AVANIS_LONJAS_PrecioLonja&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>PrecioLonjaModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PrecioLonjaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PrecioLonjaImpl
 * @generated
 */
@JSON(strict = true)
public class PrecioLonjaModelImpl
	extends BaseModelImpl<PrecioLonja> implements PrecioLonjaModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a precio lonja model instance should use the <code>PrecioLonja</code> interface instead.
	 */
	public static final String TABLE_NAME = "AVANIS_LONJAS_PrecioLonja";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"entityId", Types.BIGINT},
		{"productoId", Types.BIGINT}, {"lonjaId", Types.BIGINT},
		{"grupoId", Types.BIGINT}, {"subGrupoId", Types.BIGINT},
		{"areaId", Types.BIGINT}, {"fecha", Types.TIMESTAMP},
		{"nombreProducto", Types.VARCHAR}, {"precioAnterior", Types.VARCHAR},
		{"precioUltimo", Types.VARCHAR}, {"precioMaximo", Types.VARCHAR},
		{"precioMedio", Types.VARCHAR}, {"precioMinimo", Types.VARCHAR},
		{"precioOrigen", Types.VARCHAR}, {"anteriorEuros", Types.VARCHAR},
		{"ultimoEuros", Types.VARCHAR}, {"unidadMedida", Types.VARCHAR},
		{"unidadLarga", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("entityId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("productoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("lonjaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("grupoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("subGrupoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("areaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fecha", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("nombreProducto", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("precioAnterior", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("precioUltimo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("precioMaximo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("precioMedio", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("precioMinimo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("precioOrigen", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("anteriorEuros", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ultimoEuros", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("unidadMedida", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("unidadLarga", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table AVANIS_LONJAS_PrecioLonja (uuid_ VARCHAR(75) null,entityId LONG not null primary key,productoId LONG,lonjaId LONG,grupoId LONG,subGrupoId LONG,areaId LONG,fecha DATE null,nombreProducto VARCHAR(75) null,precioAnterior VARCHAR(75) null,precioUltimo VARCHAR(75) null,precioMaximo VARCHAR(75) null,precioMedio VARCHAR(75) null,precioMinimo VARCHAR(75) null,precioOrigen VARCHAR(75) null,anteriorEuros VARCHAR(75) null,ultimoEuros VARCHAR(75) null,unidadMedida VARCHAR(75) null,unidadLarga VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";

	public static final String TABLE_SQL_DROP =
		"drop table AVANIS_LONJAS_PrecioLonja";

	public static final String ORDER_BY_JPQL =
		" ORDER BY precioLonja.lonjaId ASC, precioLonja.fecha ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY AVANIS_LONJAS_PrecioLonja.lonjaId ASC, AVANIS_LONJAS_PrecioLonja.fecha ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long AREAID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long FECHA_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GRUPOID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long LONJAID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PRODUCTOID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SUBGRUPOID_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public PrecioLonjaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _entityId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEntityId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _entityId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PrecioLonja.class;
	}

	@Override
	public String getModelClassName() {
		return PrecioLonja.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<PrecioLonja, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<PrecioLonja, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PrecioLonja, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((PrecioLonja)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<PrecioLonja, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<PrecioLonja, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(PrecioLonja)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<PrecioLonja, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<PrecioLonja, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<PrecioLonja, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<PrecioLonja, Object>>
				attributeGetterFunctions =
					new LinkedHashMap<String, Function<PrecioLonja, Object>>();

			attributeGetterFunctions.put("uuid", PrecioLonja::getUuid);
			attributeGetterFunctions.put("entityId", PrecioLonja::getEntityId);
			attributeGetterFunctions.put(
				"productoId", PrecioLonja::getProductoId);
			attributeGetterFunctions.put("lonjaId", PrecioLonja::getLonjaId);
			attributeGetterFunctions.put("grupoId", PrecioLonja::getGrupoId);
			attributeGetterFunctions.put(
				"subGrupoId", PrecioLonja::getSubGrupoId);
			attributeGetterFunctions.put("areaId", PrecioLonja::getAreaId);
			attributeGetterFunctions.put("fecha", PrecioLonja::getFecha);
			attributeGetterFunctions.put(
				"nombreProducto", PrecioLonja::getNombreProducto);
			attributeGetterFunctions.put(
				"precioAnterior", PrecioLonja::getPrecioAnterior);
			attributeGetterFunctions.put(
				"precioUltimo", PrecioLonja::getPrecioUltimo);
			attributeGetterFunctions.put(
				"precioMaximo", PrecioLonja::getPrecioMaximo);
			attributeGetterFunctions.put(
				"precioMedio", PrecioLonja::getPrecioMedio);
			attributeGetterFunctions.put(
				"precioMinimo", PrecioLonja::getPrecioMinimo);
			attributeGetterFunctions.put(
				"precioOrigen", PrecioLonja::getPrecioOrigen);
			attributeGetterFunctions.put(
				"anteriorEuros", PrecioLonja::getAnteriorEuros);
			attributeGetterFunctions.put(
				"ultimoEuros", PrecioLonja::getUltimoEuros);
			attributeGetterFunctions.put(
				"unidadMedida", PrecioLonja::getUnidadMedida);
			attributeGetterFunctions.put(
				"unidadLarga", PrecioLonja::getUnidadLarga);
			attributeGetterFunctions.put(
				"createDate", PrecioLonja::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", PrecioLonja::getModifiedDate);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<PrecioLonja, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<PrecioLonja, ?>> attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<PrecioLonja, ?>>();

			attributeSetterBiConsumers.put(
				"uuid", (BiConsumer<PrecioLonja, String>)PrecioLonja::setUuid);
			attributeSetterBiConsumers.put(
				"entityId",
				(BiConsumer<PrecioLonja, Long>)PrecioLonja::setEntityId);
			attributeSetterBiConsumers.put(
				"productoId",
				(BiConsumer<PrecioLonja, Long>)PrecioLonja::setProductoId);
			attributeSetterBiConsumers.put(
				"lonjaId",
				(BiConsumer<PrecioLonja, Long>)PrecioLonja::setLonjaId);
			attributeSetterBiConsumers.put(
				"grupoId",
				(BiConsumer<PrecioLonja, Long>)PrecioLonja::setGrupoId);
			attributeSetterBiConsumers.put(
				"subGrupoId",
				(BiConsumer<PrecioLonja, Long>)PrecioLonja::setSubGrupoId);
			attributeSetterBiConsumers.put(
				"areaId",
				(BiConsumer<PrecioLonja, Long>)PrecioLonja::setAreaId);
			attributeSetterBiConsumers.put(
				"fecha", (BiConsumer<PrecioLonja, Date>)PrecioLonja::setFecha);
			attributeSetterBiConsumers.put(
				"nombreProducto",
				(BiConsumer<PrecioLonja, String>)
					PrecioLonja::setNombreProducto);
			attributeSetterBiConsumers.put(
				"precioAnterior",
				(BiConsumer<PrecioLonja, String>)
					PrecioLonja::setPrecioAnterior);
			attributeSetterBiConsumers.put(
				"precioUltimo",
				(BiConsumer<PrecioLonja, String>)PrecioLonja::setPrecioUltimo);
			attributeSetterBiConsumers.put(
				"precioMaximo",
				(BiConsumer<PrecioLonja, String>)PrecioLonja::setPrecioMaximo);
			attributeSetterBiConsumers.put(
				"precioMedio",
				(BiConsumer<PrecioLonja, String>)PrecioLonja::setPrecioMedio);
			attributeSetterBiConsumers.put(
				"precioMinimo",
				(BiConsumer<PrecioLonja, String>)PrecioLonja::setPrecioMinimo);
			attributeSetterBiConsumers.put(
				"precioOrigen",
				(BiConsumer<PrecioLonja, String>)PrecioLonja::setPrecioOrigen);
			attributeSetterBiConsumers.put(
				"anteriorEuros",
				(BiConsumer<PrecioLonja, String>)PrecioLonja::setAnteriorEuros);
			attributeSetterBiConsumers.put(
				"ultimoEuros",
				(BiConsumer<PrecioLonja, String>)PrecioLonja::setUltimoEuros);
			attributeSetterBiConsumers.put(
				"unidadMedida",
				(BiConsumer<PrecioLonja, String>)PrecioLonja::setUnidadMedida);
			attributeSetterBiConsumers.put(
				"unidadLarga",
				(BiConsumer<PrecioLonja, String>)PrecioLonja::setUnidadLarga);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<PrecioLonja, Date>)PrecioLonja::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<PrecioLonja, Date>)PrecioLonja::setModifiedDate);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getEntityId() {
		return _entityId;
	}

	@Override
	public void setEntityId(long entityId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_entityId = entityId;
	}

	@JSON
	@Override
	public long getProductoId() {
		return _productoId;
	}

	@Override
	public void setProductoId(long productoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_productoId = productoId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalProductoId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("productoId"));
	}

	@JSON
	@Override
	public long getLonjaId() {
		return _lonjaId;
	}

	@Override
	public void setLonjaId(long lonjaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lonjaId = lonjaId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalLonjaId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("lonjaId"));
	}

	@JSON
	@Override
	public long getGrupoId() {
		return _grupoId;
	}

	@Override
	public void setGrupoId(long grupoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_grupoId = grupoId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGrupoId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("grupoId"));
	}

	@JSON
	@Override
	public long getSubGrupoId() {
		return _subGrupoId;
	}

	@Override
	public void setSubGrupoId(long subGrupoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_subGrupoId = subGrupoId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSubGrupoId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("subGrupoId"));
	}

	@JSON
	@Override
	public long getAreaId() {
		return _areaId;
	}

	@Override
	public void setAreaId(long areaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_areaId = areaId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalAreaId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("areaId"));
	}

	@JSON
	@Override
	public Date getFecha() {
		return _fecha;
	}

	@Override
	public void setFecha(Date fecha) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fecha = fecha;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public Date getOriginalFecha() {
		return getColumnOriginalValue("fecha");
	}

	@JSON
	@Override
	public String getNombreProducto() {
		if (_nombreProducto == null) {
			return "";
		}
		else {
			return _nombreProducto;
		}
	}

	@Override
	public void setNombreProducto(String nombreProducto) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nombreProducto = nombreProducto;
	}

	@JSON
	@Override
	public String getPrecioAnterior() {
		if (_precioAnterior == null) {
			return "";
		}
		else {
			return _precioAnterior;
		}
	}

	@Override
	public void setPrecioAnterior(String precioAnterior) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_precioAnterior = precioAnterior;
	}

	@JSON
	@Override
	public String getPrecioUltimo() {
		if (_precioUltimo == null) {
			return "";
		}
		else {
			return _precioUltimo;
		}
	}

	@Override
	public void setPrecioUltimo(String precioUltimo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_precioUltimo = precioUltimo;
	}

	@JSON
	@Override
	public String getPrecioMaximo() {
		if (_precioMaximo == null) {
			return "";
		}
		else {
			return _precioMaximo;
		}
	}

	@Override
	public void setPrecioMaximo(String precioMaximo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_precioMaximo = precioMaximo;
	}

	@JSON
	@Override
	public String getPrecioMedio() {
		if (_precioMedio == null) {
			return "";
		}
		else {
			return _precioMedio;
		}
	}

	@Override
	public void setPrecioMedio(String precioMedio) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_precioMedio = precioMedio;
	}

	@JSON
	@Override
	public String getPrecioMinimo() {
		if (_precioMinimo == null) {
			return "";
		}
		else {
			return _precioMinimo;
		}
	}

	@Override
	public void setPrecioMinimo(String precioMinimo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_precioMinimo = precioMinimo;
	}

	@JSON
	@Override
	public String getPrecioOrigen() {
		if (_precioOrigen == null) {
			return "";
		}
		else {
			return _precioOrigen;
		}
	}

	@Override
	public void setPrecioOrigen(String precioOrigen) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_precioOrigen = precioOrigen;
	}

	@JSON
	@Override
	public String getAnteriorEuros() {
		if (_anteriorEuros == null) {
			return "";
		}
		else {
			return _anteriorEuros;
		}
	}

	@Override
	public void setAnteriorEuros(String anteriorEuros) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_anteriorEuros = anteriorEuros;
	}

	@JSON
	@Override
	public String getUltimoEuros() {
		if (_ultimoEuros == null) {
			return "";
		}
		else {
			return _ultimoEuros;
		}
	}

	@Override
	public void setUltimoEuros(String ultimoEuros) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ultimoEuros = ultimoEuros;
	}

	@JSON
	@Override
	public String getUnidadMedida() {
		if (_unidadMedida == null) {
			return "";
		}
		else {
			return _unidadMedida;
		}
	}

	@Override
	public void setUnidadMedida(String unidadMedida) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_unidadMedida = unidadMedida;
	}

	@JSON
	@Override
	public String getUnidadLarga() {
		if (_unidadLarga == null) {
			return "";
		}
		else {
			return _unidadLarga;
		}
	}

	@Override
	public void setUnidadLarga(String unidadLarga) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_unidadLarga = unidadLarga;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, PrecioLonja.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PrecioLonja toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, PrecioLonja>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PrecioLonjaImpl precioLonjaImpl = new PrecioLonjaImpl();

		precioLonjaImpl.setUuid(getUuid());
		precioLonjaImpl.setEntityId(getEntityId());
		precioLonjaImpl.setProductoId(getProductoId());
		precioLonjaImpl.setLonjaId(getLonjaId());
		precioLonjaImpl.setGrupoId(getGrupoId());
		precioLonjaImpl.setSubGrupoId(getSubGrupoId());
		precioLonjaImpl.setAreaId(getAreaId());
		precioLonjaImpl.setFecha(getFecha());
		precioLonjaImpl.setNombreProducto(getNombreProducto());
		precioLonjaImpl.setPrecioAnterior(getPrecioAnterior());
		precioLonjaImpl.setPrecioUltimo(getPrecioUltimo());
		precioLonjaImpl.setPrecioMaximo(getPrecioMaximo());
		precioLonjaImpl.setPrecioMedio(getPrecioMedio());
		precioLonjaImpl.setPrecioMinimo(getPrecioMinimo());
		precioLonjaImpl.setPrecioOrigen(getPrecioOrigen());
		precioLonjaImpl.setAnteriorEuros(getAnteriorEuros());
		precioLonjaImpl.setUltimoEuros(getUltimoEuros());
		precioLonjaImpl.setUnidadMedida(getUnidadMedida());
		precioLonjaImpl.setUnidadLarga(getUnidadLarga());
		precioLonjaImpl.setCreateDate(getCreateDate());
		precioLonjaImpl.setModifiedDate(getModifiedDate());

		precioLonjaImpl.resetOriginalValues();

		return precioLonjaImpl;
	}

	@Override
	public PrecioLonja cloneWithOriginalValues() {
		PrecioLonjaImpl precioLonjaImpl = new PrecioLonjaImpl();

		precioLonjaImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		precioLonjaImpl.setEntityId(
			this.<Long>getColumnOriginalValue("entityId"));
		precioLonjaImpl.setProductoId(
			this.<Long>getColumnOriginalValue("productoId"));
		precioLonjaImpl.setLonjaId(
			this.<Long>getColumnOriginalValue("lonjaId"));
		precioLonjaImpl.setGrupoId(
			this.<Long>getColumnOriginalValue("grupoId"));
		precioLonjaImpl.setSubGrupoId(
			this.<Long>getColumnOriginalValue("subGrupoId"));
		precioLonjaImpl.setAreaId(this.<Long>getColumnOriginalValue("areaId"));
		precioLonjaImpl.setFecha(this.<Date>getColumnOriginalValue("fecha"));
		precioLonjaImpl.setNombreProducto(
			this.<String>getColumnOriginalValue("nombreProducto"));
		precioLonjaImpl.setPrecioAnterior(
			this.<String>getColumnOriginalValue("precioAnterior"));
		precioLonjaImpl.setPrecioUltimo(
			this.<String>getColumnOriginalValue("precioUltimo"));
		precioLonjaImpl.setPrecioMaximo(
			this.<String>getColumnOriginalValue("precioMaximo"));
		precioLonjaImpl.setPrecioMedio(
			this.<String>getColumnOriginalValue("precioMedio"));
		precioLonjaImpl.setPrecioMinimo(
			this.<String>getColumnOriginalValue("precioMinimo"));
		precioLonjaImpl.setPrecioOrigen(
			this.<String>getColumnOriginalValue("precioOrigen"));
		precioLonjaImpl.setAnteriorEuros(
			this.<String>getColumnOriginalValue("anteriorEuros"));
		precioLonjaImpl.setUltimoEuros(
			this.<String>getColumnOriginalValue("ultimoEuros"));
		precioLonjaImpl.setUnidadMedida(
			this.<String>getColumnOriginalValue("unidadMedida"));
		precioLonjaImpl.setUnidadLarga(
			this.<String>getColumnOriginalValue("unidadLarga"));
		precioLonjaImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		precioLonjaImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));

		return precioLonjaImpl;
	}

	@Override
	public int compareTo(PrecioLonja precioLonja) {
		int value = 0;

		if (getLonjaId() < precioLonja.getLonjaId()) {
			value = -1;
		}
		else if (getLonjaId() > precioLonja.getLonjaId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		value = DateUtil.compareTo(getFecha(), precioLonja.getFecha());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof PrecioLonja)) {
			return false;
		}

		PrecioLonja precioLonja = (PrecioLonja)object;

		long primaryKey = precioLonja.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<PrecioLonja> toCacheModel() {
		PrecioLonjaCacheModel precioLonjaCacheModel =
			new PrecioLonjaCacheModel();

		precioLonjaCacheModel.uuid = getUuid();

		String uuid = precioLonjaCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			precioLonjaCacheModel.uuid = null;
		}

		precioLonjaCacheModel.entityId = getEntityId();

		precioLonjaCacheModel.productoId = getProductoId();

		precioLonjaCacheModel.lonjaId = getLonjaId();

		precioLonjaCacheModel.grupoId = getGrupoId();

		precioLonjaCacheModel.subGrupoId = getSubGrupoId();

		precioLonjaCacheModel.areaId = getAreaId();

		Date fecha = getFecha();

		if (fecha != null) {
			precioLonjaCacheModel.fecha = fecha.getTime();
		}
		else {
			precioLonjaCacheModel.fecha = Long.MIN_VALUE;
		}

		precioLonjaCacheModel.nombreProducto = getNombreProducto();

		String nombreProducto = precioLonjaCacheModel.nombreProducto;

		if ((nombreProducto != null) && (nombreProducto.length() == 0)) {
			precioLonjaCacheModel.nombreProducto = null;
		}

		precioLonjaCacheModel.precioAnterior = getPrecioAnterior();

		String precioAnterior = precioLonjaCacheModel.precioAnterior;

		if ((precioAnterior != null) && (precioAnterior.length() == 0)) {
			precioLonjaCacheModel.precioAnterior = null;
		}

		precioLonjaCacheModel.precioUltimo = getPrecioUltimo();

		String precioUltimo = precioLonjaCacheModel.precioUltimo;

		if ((precioUltimo != null) && (precioUltimo.length() == 0)) {
			precioLonjaCacheModel.precioUltimo = null;
		}

		precioLonjaCacheModel.precioMaximo = getPrecioMaximo();

		String precioMaximo = precioLonjaCacheModel.precioMaximo;

		if ((precioMaximo != null) && (precioMaximo.length() == 0)) {
			precioLonjaCacheModel.precioMaximo = null;
		}

		precioLonjaCacheModel.precioMedio = getPrecioMedio();

		String precioMedio = precioLonjaCacheModel.precioMedio;

		if ((precioMedio != null) && (precioMedio.length() == 0)) {
			precioLonjaCacheModel.precioMedio = null;
		}

		precioLonjaCacheModel.precioMinimo = getPrecioMinimo();

		String precioMinimo = precioLonjaCacheModel.precioMinimo;

		if ((precioMinimo != null) && (precioMinimo.length() == 0)) {
			precioLonjaCacheModel.precioMinimo = null;
		}

		precioLonjaCacheModel.precioOrigen = getPrecioOrigen();

		String precioOrigen = precioLonjaCacheModel.precioOrigen;

		if ((precioOrigen != null) && (precioOrigen.length() == 0)) {
			precioLonjaCacheModel.precioOrigen = null;
		}

		precioLonjaCacheModel.anteriorEuros = getAnteriorEuros();

		String anteriorEuros = precioLonjaCacheModel.anteriorEuros;

		if ((anteriorEuros != null) && (anteriorEuros.length() == 0)) {
			precioLonjaCacheModel.anteriorEuros = null;
		}

		precioLonjaCacheModel.ultimoEuros = getUltimoEuros();

		String ultimoEuros = precioLonjaCacheModel.ultimoEuros;

		if ((ultimoEuros != null) && (ultimoEuros.length() == 0)) {
			precioLonjaCacheModel.ultimoEuros = null;
		}

		precioLonjaCacheModel.unidadMedida = getUnidadMedida();

		String unidadMedida = precioLonjaCacheModel.unidadMedida;

		if ((unidadMedida != null) && (unidadMedida.length() == 0)) {
			precioLonjaCacheModel.unidadMedida = null;
		}

		precioLonjaCacheModel.unidadLarga = getUnidadLarga();

		String unidadLarga = precioLonjaCacheModel.unidadLarga;

		if ((unidadLarga != null) && (unidadLarga.length() == 0)) {
			precioLonjaCacheModel.unidadLarga = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			precioLonjaCacheModel.createDate = createDate.getTime();
		}
		else {
			precioLonjaCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			precioLonjaCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			precioLonjaCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return precioLonjaCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<PrecioLonja, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<PrecioLonja, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PrecioLonja, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((PrecioLonja)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, PrecioLonja>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					PrecioLonja.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _entityId;
	private long _productoId;
	private long _lonjaId;
	private long _grupoId;
	private long _subGrupoId;
	private long _areaId;
	private Date _fecha;
	private String _nombreProducto;
	private String _precioAnterior;
	private String _precioUltimo;
	private String _precioMaximo;
	private String _precioMedio;
	private String _precioMinimo;
	private String _precioOrigen;
	private String _anteriorEuros;
	private String _ultimoEuros;
	private String _unidadMedida;
	private String _unidadLarga;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<PrecioLonja, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((PrecioLonja)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("entityId", _entityId);
		_columnOriginalValues.put("productoId", _productoId);
		_columnOriginalValues.put("lonjaId", _lonjaId);
		_columnOriginalValues.put("grupoId", _grupoId);
		_columnOriginalValues.put("subGrupoId", _subGrupoId);
		_columnOriginalValues.put("areaId", _areaId);
		_columnOriginalValues.put("fecha", _fecha);
		_columnOriginalValues.put("nombreProducto", _nombreProducto);
		_columnOriginalValues.put("precioAnterior", _precioAnterior);
		_columnOriginalValues.put("precioUltimo", _precioUltimo);
		_columnOriginalValues.put("precioMaximo", _precioMaximo);
		_columnOriginalValues.put("precioMedio", _precioMedio);
		_columnOriginalValues.put("precioMinimo", _precioMinimo);
		_columnOriginalValues.put("precioOrigen", _precioOrigen);
		_columnOriginalValues.put("anteriorEuros", _anteriorEuros);
		_columnOriginalValues.put("ultimoEuros", _ultimoEuros);
		_columnOriginalValues.put("unidadMedida", _unidadMedida);
		_columnOriginalValues.put("unidadLarga", _unidadLarga);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("entityId", 2L);

		columnBitmasks.put("productoId", 4L);

		columnBitmasks.put("lonjaId", 8L);

		columnBitmasks.put("grupoId", 16L);

		columnBitmasks.put("subGrupoId", 32L);

		columnBitmasks.put("areaId", 64L);

		columnBitmasks.put("fecha", 128L);

		columnBitmasks.put("nombreProducto", 256L);

		columnBitmasks.put("precioAnterior", 512L);

		columnBitmasks.put("precioUltimo", 1024L);

		columnBitmasks.put("precioMaximo", 2048L);

		columnBitmasks.put("precioMedio", 4096L);

		columnBitmasks.put("precioMinimo", 8192L);

		columnBitmasks.put("precioOrigen", 16384L);

		columnBitmasks.put("anteriorEuros", 32768L);

		columnBitmasks.put("ultimoEuros", 65536L);

		columnBitmasks.put("unidadMedida", 131072L);

		columnBitmasks.put("unidadLarga", 262144L);

		columnBitmasks.put("createDate", 524288L);

		columnBitmasks.put("modifiedDate", 1048576L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private PrecioLonja _escapedModel;

}