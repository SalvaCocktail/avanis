/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package avanis.thread.logger.sb.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the ThreadLog service. Represents a row in the &quot;ThreadLogger_ThreadLog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>avanis.thread.logger.sb.model.impl.ThreadLogModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>avanis.thread.logger.sb.model.impl.ThreadLogImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ThreadLog
 * @generated
 */
@ProviderType
public interface ThreadLogModel extends BaseModel<ThreadLog> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a thread log model instance should use the {@link ThreadLog} interface instead.
	 */

	/**
	 * Returns the primary key of this thread log.
	 *
	 * @return the primary key of this thread log
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this thread log.
	 *
	 * @param primaryKey the primary key of this thread log
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the thread log ID of this thread log.
	 *
	 * @return the thread log ID of this thread log
	 */
	public long getThreadLogId();

	/**
	 * Sets the thread log ID of this thread log.
	 *
	 * @param threadLogId the thread log ID of this thread log
	 */
	public void setThreadLogId(long threadLogId);

	/**
	 * Returns the create date of this thread log.
	 *
	 * @return the create date of this thread log
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this thread log.
	 *
	 * @param createDate the create date of this thread log
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the thread name of this thread log.
	 *
	 * @return the thread name of this thread log
	 */
	@AutoEscape
	public String getThreadName();

	/**
	 * Sets the thread name of this thread log.
	 *
	 * @param threadName the thread name of this thread log
	 */
	public void setThreadName(String threadName);

	/**
	 * Returns the stack trace of this thread log.
	 *
	 * @return the stack trace of this thread log
	 */
	@AutoEscape
	public String getStackTrace();

	/**
	 * Sets the stack trace of this thread log.
	 *
	 * @param stackTrace the stack trace of this thread log
	 */
	public void setStackTrace(String stackTrace);

	/**
	 * Returns the thread state of this thread log.
	 *
	 * @return the thread state of this thread log
	 */
	@AutoEscape
	public String getThreadState();

	/**
	 * Sets the thread state of this thread log.
	 *
	 * @param threadState the thread state of this thread log
	 */
	public void setThreadState(String threadState);

	/**
	 * Returns the lock name of this thread log.
	 *
	 * @return the lock name of this thread log
	 */
	@AutoEscape
	public String getLockName();

	/**
	 * Sets the lock name of this thread log.
	 *
	 * @param lockName the lock name of this thread log
	 */
	public void setLockName(String lockName);

	/**
	 * Returns the lock owner name of this thread log.
	 *
	 * @return the lock owner name of this thread log
	 */
	@AutoEscape
	public String getLockOwnerName();

	/**
	 * Sets the lock owner name of this thread log.
	 *
	 * @param lockOwnerName the lock owner name of this thread log
	 */
	public void setLockOwnerName(String lockOwnerName);

	/**
	 * Returns the lock owner ID of this thread log.
	 *
	 * @return the lock owner ID of this thread log
	 */
	public long getLockOwnerId();

	/**
	 * Sets the lock owner ID of this thread log.
	 *
	 * @param lockOwnerId the lock owner ID of this thread log
	 */
	public void setLockOwnerId(long lockOwnerId);

	@Override
	public ThreadLog cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}